* {
  margin: 0px;
  padding: 0px;
}
.main-div {
  width: 100vw;
  height: 100vh;

  display: flex;
  flex-direction: column;
  gap: 40px;
  align-items: center;
  justify-content: center;
}

.btn {
  font-size: 30px;
  padding: 8px;
}

.selfToggle {
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  /* border: 1px solid black; */
  gap: 3px;
}

.switch {
  position: relative;
  display: inline-block;
  width: 4rem;
  height: 2rem;
  background-color: rgba(0, 0, 0, 0.25);
  border-radius: 2rem;
  transition: all 0.3s linear;
}

/*  add ball inside it*/

.switch::after {
  content: ""; /* Ensures that the pseudo-element generates an empty box.*/
  position: absolute; /*parent is relative thats why */
  top: 0.1rem;
  left: 0.1rem;
  width: 1.8rem;
  height: 1.8rem;
  border-radius: 50%;
  background-color: #fff;
  transition: all 0.3s linear;
}

input[type="checkbox"]:checked + .switch:after {
  translate: 2rem 0;
}

input[type="checkbox"]:checked + .switch {
  background-color: #7982ff;
}

input[type="checkbox"] {
  display: none;
  /* visibility: hidden; */
}

/* if input is checked then .switch:after will work, so + is used as as the adjacent sibling combinato
It is used to select an element that is immediately preceded by a specified element,  In other words,
 it targets the next sibling element that shares the same parent.  */

/*
1.  Difference in visibiity: hidden and display:none

->  Both display and visibility doing same thing just to hide checkbox, 
    but by doing display none checkbox doesn't aquire space on the other hand in case of visibility:hidden
    checkbox aquire its own space 
*/
